# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  name: String!
  password: String!
  email: String!
  blocked: Boolean!
  type: String!
  personal_id: String!
}

type Exercise {
  id: ID!
  name: String!
  personal_id: String!
  instructions: String!
  video: String!
  rest: Float!
  load: Float!
  load_progress: Boolean!
  series: Float!
}

type Training {
  id: ID!
  name: String!
  description: String
  show_to_student: Boolean!
  student_id: String!
  personal_id: String!
  exercises: [Exercise!]
}

type TrainingProgress {
  id: ID!
  training_id: String!
  name: String!
  description: String
  student_id: String!
  personal_id: String!
  started_at: DateTime
  finished_at: DateTime
  exercises: [Exercise!]
  finish_feedback: String
  finish_status: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input TrainingExerciseInput {
  id: ID!
  name: String!
  personal_id: String!
  instructions: String!
  video: String!
  rest: Float!
  load: Float!
  load_progress: Boolean!
  series: Float!
}

type Query {
  listStudents(id: ID, personal_id: String!, name: String): [User!]!
  getAllExercises(id: ID, personal_id: String!, name: String): [Exercise!]!
  trainings(id: ID, personal_id: String!, name: String): [Training!]!
  studentTrainigs(student_id: String!): [Training!]!
}

type Mutation {
  createStudent(user: CreateStudentInput!): User!
  deleteStudents(ids: [ID!]!): Boolean!
  updateStudents(user: UpdateStudentInput!): User!
  createPersonal(user: CreatePersonalInput!): User!
  login(authCredentialsDto: AuthCredentialsDto!): String!
  createExercise(exercise: CreateExerciseInput!): Exercise!
  updateExercise(exercise: UpdateExerciseInput!): Exercise!
  deleteExercise(ids: [ID!]!): Boolean!
  createTraining(training: CreateTrainingInput!): Training!
  updateTraining(training: UpdateTrainingInput!): Training!
  deleteTraining(ids: [ID!]!): Boolean!
  startTraining(id: String!, status: String!, feedback: String): TrainingProgress!
  finishTraining(id: String!, status: String!, feedback: String): TrainingProgress!
  cancelTraining(id: String!, status: String!, feedback: String): Boolean!
}

input CreateStudentInput {
  name: String!
  email: String!
  password: String!
  personal_id: String!
}

input UpdateStudentInput {
  id: ID!
  name: String!
  email: String!
  password: String
  personal_id: String!
}

input CreatePersonalInput {
  name: String!
  email: String!
  password: String!
}

input AuthCredentialsDto {
  email: String!
  password: String!
}

input CreateExerciseInput {
  name: String!
  personal_id: String!
  instructions: String
  video: String
  rest: Float!
  load: Float!
  load_progress: Boolean!
  series: Float!
}

input UpdateExerciseInput {
  id: ID!
  name: String!
  personal_id: String!
  instructions: String
  video: String
  rest: Float!
  load: Float!
  load_progress: Boolean!
  series: Float!
}

input CreateTrainingInput {
  name: String!
  description: String
  show_to_student: Boolean!
  student_id: String!
  personal_id: String!
  exercises: [TrainingExerciseInput!]!
}

input UpdateTrainingInput {
  id: ID!
  name: String!
  description: String
  show_to_student: Boolean!
  student_id: String!
  personal_id: String!
  exercises: [TrainingExerciseInput!]!
}